name    = DBIx-QuickORM
author  = Chad Granum <exodist@cpan.org>
license = Perl_5
copyright_holder = Chad Granum

[RewriteVersion] ; sets dist version from main module's $VERSION
[License]
[ManifestSkip]
[Manifest]
[NextRelease]

[GatherDir]
exclude_match = ^tt                 ; only run these tests locally
exclude_match = ^pt                 ; only run these tests locally
exclude_match = ^cover
exclude_match = ^demo
exclude_match = ^nyt
exclude_match = ^old/
exclude_match = ^t/
exclude_match = ^master/
exclude_match = ^data/
exclude_filename = LICENSE
exclude_filename = Makefile.PL
exclude_filename = README
exclude_filename = README.md
exclude_filename = cpanfile
exclude_filename = cpanfile.ci
exclude_filename = scratch
exclude_filename = TEMPLATE.pod

[Git::GatherDir / GatherDotFilesT]
root = t/
prefix = t/
include_dotfiles = 1

[PodSyntaxTests]
[TestRelease]

[MetaResources]
bugtracker.web  = https://github.com/exodist/DBIx-QuickORM/issues
repository.url  = https://github.com/exodist/DBIx-QuickORM/
repository.type = git

[Prereqs]
perl                     = 5.014000
SQL::Abstract            = 2.000001
Scalar::Util             = 1.56
UUID                     = 0.36
Carp                     = 0
Class::Method::Modifiers = 0
Cpanel::JSON::XS         = 0
DBD::SQLite              = 0
DBI                      = 0
Data::Dumper             = 0
DateTime                 = 0
DateTime::Format::SQLite = 0
Hash::Util               = 0
IO::Select               = 0
Importer                 = 0
List::Util               = 0
Module::Pluggable        = 0
POSIX                    = 0
Role::Tiny               = 0
Role::Tiny::With         = 0
Scope::Guard             = 0
Storable                 = 0
Sub::Util                = 0
Time::HiRes              = 0
base                     = 0
constant                 = 0
overload                 = 0
parent                   = 0

[Prereqs / TestRequires]
Test2::Tools::QuickDB  = 0.000037
Test2::Require::Module = 0
Test2::Tools::Subtest  = 0
Test2::Util            = 0
Test2::V0              = 0
Test::More             = 0
ok                     = 0

[Prereqs / ConfigureRequires]
ExtUtils::MakeMaker = 0

[Prereqs / DevelopRequires]
DBD::MariaDB             = 0
DBD::Pg                  = 0
DBD::SQLite              = 0
DBD::mysql               = 0
DateTime::Format::MySQL  = 0
DateTime::Format::Pg     = 0
DateTime::Format::SQLite = 0

[Prereqs / RuntimeSuggests]
Class::XSAccessor        = 1.19
DBD::MariaDB             = 0
DBD::Pg                  = 0
DBD::SQLite              = 0
DBD::mysql               = 0
DateTime::Format::MySQL  = 0
DateTime::Format::Pg     = 0
DateTime::Format::SQLite = 0

[MakeMaker::Awesome]
:version = 0.26
delimiter = |
header = |use Config qw/%Config/;
header = |die "Platform ($^O) not supported, patches welcome!\n"
header = |  if $^O =~ m/(dos|os2)/i;
header = |if ($ENV{AUTOMATED_TESTING}) {
header = |    my $is_njh = 0;
header = |    $is_njh ||= -d '/export/home/njh';
header = |    $is_njh ||= -d '/home/njh';
header = |    $is_njh ||= lc($ENV{USER} // 'na') eq 'njh';
header = |    $is_njh ||= lc($ENV{HOME} // 'na') =~ m{njh$};
header = |    $is_njh ||= lc($ENV{PATH} // 'na') =~ m{/njh/};
header = |    die "OS unsupported\nNJH smokers are broken, aborting tests.\n"
header = |        if $is_njh;
header = |}

[CPANFile]
[MetaYAML]
[MetaJSON]

; authordep Pod::Markdown
[ReadmeFromPod / Markdown]
filename = lib/DBIx/QuickORM.pm
type = markdown
readme = README.md

[ReadmeFromPod / Text]
filename = lib/DBIx/QuickORM.pm
type = text
readme = README

[CopyFilesFromBuild]
copy = LICENSE
copy = cpanfile
copy = README
copy = README.md
copy = Makefile.PL

[Git::Check]
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes

[Git::Commit]
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
allow_dirty = Changes

[Git::Tag]

[FakeRelease]

[BumpVersionAfterRelease]

[Git::Commit / Commit_Changes]
munge_makefile_pl = true
allow_dirty_match = ^lib
allow_dirty_match = ^scripts
allow_dirty = Makefile.PL
allow_dirty = README
allow_dirty = README.md
allow_dirty = cpanfile
allow_dirty = LICENSE
commit_msg = Automated Version Bump
